// postfix expression evaluation
// This problem contains some errors need some improvements


#include<bits/stdc++.h>
using namespace std;

int main(){
	string str = "100 200 + 2 / 5 * 7 +";
	
	stack<int>s;
	int x;
	
	int val1;
	int val2;
	
	for(int i=0;i<str.size();i++){
	    x=0;
	    while(str[i]>='0' && str[i]<='9' && str[i] != ' '){  // the problem in this code is that when space is encountered it pushes 0 into the stack
	         x = x*10 + str[i]-'0';
	         i++;
	    }
	    
	    i--;
	    
	    s.push(x);
	    
	    switch(str[i]){
	        
	        case '+':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val1+val2);
	        break;
	        
	        case '-':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val2-val1);
	        break;
	        
	        case '*':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val1*val2);
	        break;
	        
	        
	        case '/':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val2/val1);
	        break;
	    }
	}
	
	cout<<s.top();
	return 0;
}









// the improved version of this code


#include<bits/stdc++.h>
using namespace std;

int main(){
	string str = "100 200 + 2 / 5 * 7 +";
	
	stack<int>s;
	int x;
	
	int val1;
	int val2;
	
	for(int i=0;i<str.size();i++){
	    x=0;
	    if(str[i]>='0' and str[i]<='9')
	    {
    	    while(str[i]>='0' && str[i]<='9' && str[i] != ' '){
    	         x = x*10 + str[i]-'0';
    	         i++;
    	    }
    	    s.push(x);
	    }
	    
	   // i--;
	    
	   // s.push(x);
	    
	    switch(str[i]){
	        
	        case '+':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val1+val2);
	        break;
	        
	        case '-':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val2-val1);
	        break;
	        
	        case '*':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val1*val2);
	        break;
	        
	        
	        case '/':
	        val1=s.top();
	        s.pop();
	        val2=s.top();
	        s.pop();
	        s.push(val2/val1);
	        break;
	    }
	}
	
	cout<<s.top();
	return 0;
}
